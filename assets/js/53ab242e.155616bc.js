"use strict";(self.webpackChunkrives_docs=self.webpackChunkrives_docs||[]).push([[3227],{6898:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"rives/uploading-cartridges","title":"Uploading cartridges","description":"This tutorial will guide step by step on how to upload a cartridge to RIVES.","source":"@site/docs/rives/uploading-cartridges.md","sourceDirName":"rives","slug":"/rives/uploading-cartridges","permalink":"/docs/rives/uploading-cartridges","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Playing sounds","permalink":"/docs/riv/guides/playing-sounds"},"next":{"title":"Embedding Rives on any Website","permalink":"/docs/rives/embedding-rives"}}');var t=a(4848),n=a(8453);const s={sidebar_position:1},o="Uploading cartridges",d={},c=[{value:"Cartridge information metadata",id:"cartridge-information-metadata",level:2},{value:"Cartridge cover image",id:"cartridge-cover-image",level:2},{value:"Creating cartridge archive",id:"creating-cartridge-archive",level:2},{value:"Cartridge size limit",id:"cartridge-size-limit",level:2},{value:"Upload page",id:"upload-page",level:2}];function l(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"uploading-cartridges",children:"Uploading cartridges"})}),"\n",(0,t.jsxs)(i.p,{children:["This tutorial will guide step by step on how to upload a cartridge to RIVES.\nAnd make it available at ",(0,t.jsx)(i.a,{href:"https://app.rives.io/cartridges",children:"RIVES cartridges page"}),"."]}),"\n",(0,t.jsxs)(i.p,{children:["It's mandatory to already have a usable cartridge file at hand.\nIf you have not created one yet,\nlearn more about how to create one first at\n",(0,t.jsx)(i.a,{href:"../riv/creating-a-game",children:"creating a game"}),",\nthis tutorial will use the Snake cartridge created on that tutorial as an example."]}),"\n",(0,t.jsx)(i.h2,{id:"cartridge-information-metadata",children:"Cartridge information metadata"}),"\n",(0,t.jsxs)(i.p,{children:["For RIVES to properly index a cartridge,\nthe cartridge needs a file containing important cartridge information,\nsuch as title, description, tags and optionally authors and external links.\nThis metadata must be provided by a file named ",(0,t.jsx)(i.code,{children:"info.json"})," in JSON format inside the cartridge archive."]}),"\n",(0,t.jsxs)(i.p,{children:["Here is an example of the ",(0,t.jsx)(i.code,{children:"info.json"})," file for the Snake game created in the ",(0,t.jsx)(i.a,{href:"../riv/creating-a-game",children:"creating a game tutorial"}),"."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-json",children:'{\n    "name": "Snake",\n    "summary": "Snake game from tutorial",\n    "description": "Use arrow to move, the game ends when the snake hits itself or a wall!",\n    "tags": ["action", "strategy", "puzzle", "2d", "snake"],\n    "authors": [{\n        "name": "Eduardo Bart",\n        "link": "https://github.com/edubart"\n    }],\n    "links": [\n        "https://github.com/rives-io/riv/tree/main/demos/game-snake"\n    ]\n}\n'})}),"\n",(0,t.jsx)(i.p,{children:"Let's break dawn what is there:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"name"})," (mandatory): Title of the cartridge shown on RIVES."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"summary"})," (mandatory): Short description for the cartridge, may be used when hovering a cartridge on RIVES."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"description"})," (mandatory): Long description for the cartridge, should include instructions on how to play it. This can be a multi line text."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"tags"})," (mandatory): List of tags, may be used to filter on cartridges page, keep it under 10 lowercase tags."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"authors"})," (optional): List of authors names for the cartridge, alongside with an external link to his page."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"links"})," (optional): External links where people can find more information about the cartridge. Such as repository source code, X socials, Discord channel or official website. It's recommended to create a channel in ",(0,t.jsx)(i.code,{children:"#cartridges"})," RIVES Discord channel and use its link here, so people have place where they can share feedback about the cartridge."]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Please make sure the file is a valid JSON format, otherwise your cartridge may be rejected."}),"\n",(0,t.jsx)(i.h2,{id:"cartridge-cover-image",children:"Cartridge cover image"}),"\n",(0,t.jsxs)(i.p,{children:["A cartridge may optionally have a cover image that is shown when indexing on RIVES.\nThis cover image should be provided in ",(0,t.jsx)(i.code,{children:"cover.png"})," file in PNG format inside the cartridge archive.\nIt's recommended to use the same resolution as the cartridge resolution for it.\nBig or malformed cover images may cause your cartridge to be rejected when uploading.\nThey might also make your cartridge bigger, it's recommended to optimize the cover images with ",(0,t.jsx)(i.code,{children:"oxipng"})," PNG compressor."]}),"\n",(0,t.jsx)(i.p,{children:"Some developers may prefer to use the very first frame of the cartridge as the cover image.\nSo in case a cover image file is not provided then the very first frame of the cartridge will be used\nas a cover image."}),"\n",(0,t.jsx)(i.h2,{id:"creating-cartridge-archive",children:"Creating cartridge archive"}),"\n",(0,t.jsxs)(i.p,{children:["Recall that in the end of the ",(0,t.jsx)(i.a,{href:"../riv/creating-a-game",children:"creating a game tutorial"}),"\nwe compiled the ",(0,t.jsx)(i.code,{children:"snake.sqfs"})," cartridge with ",(0,t.jsx)(i.code,{children:"riv-mksqfs"})," command."]}),"\n",(0,t.jsxs)(i.p,{children:["Then just need to include the ",(0,t.jsx)(i.code,{children:"info.json"})," (and optionally ",(0,t.jsx)(i.code,{children:"cover.png"}),") files in the ",(0,t.jsx)(i.code,{children:"riv-mksqfs"})," command.\nSave the ",(0,t.jsx)(i.code,{children:"info.json"})," containing metadata show in\n",(0,t.jsx)(i.a,{href:"#cartridge-information-metadata",children:"cartridge information section"}),"\nand the you can compile the new ",(0,t.jsx)(i.code,{children:"snake.sqfs"})," with:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-sh",children:"alias rivemu-exec='rivemu -quiet -no-window -sdk -workspace -exec'\nrivemu-exec riv-mksqfs snake sprites.png info.json snake.sqfs\n"})}),"\n",(0,t.jsxs)(i.p,{children:["Notice ",(0,t.jsx)(i.code,{children:"info.json"})," was added there, lets double check if ",(0,t.jsx)(i.code,{children:"info.json"})," is indeed there and with valid name:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-sh",children:"rivemu-exec 'sqfscat snake.sqfs info.json | jq .name'\n"})}),"\n",(0,t.jsx)(i.p,{children:"It should output the description of the cartridge."}),"\n",(0,t.jsx)(i.h2,{id:"cartridge-size-limit",children:"Cartridge size limit"}),"\n",(0,t.jsx)(i.p,{children:"RIVES restricts cartridge to 256KB, you can double check the size of the cartridge with:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-sh",children:"rivemu-exec ls -sh snake.sqfs\n8.0K snake.sqfs\n"})}),"\n",(0,t.jsx)(i.p,{children:"Cartridges greater than 256KB may be rejected."}),"\n",(0,t.jsx)(i.h2,{id:"upload-page",children:"Upload page"}),"\n",(0,t.jsxs)(i.p,{children:["When you have your final ",(0,t.jsx)(i.code,{children:".sqfs"})," cartridge file ready with metadata information,\ngo over RIVES ",(0,t.jsx)(i.a,{href:"https://app.rives.io/upload-cartridge",children:"upload cartridge page"}),".\nDrag and drop the cartridge ",(0,t.jsx)(i.code,{children:".sqfs"})," file then hit the play button to load and test it."]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.img,{alt:"Upload page",src:a(8318).A+"",width:"1848",height:"1284"})}),"\n",(0,t.jsxs)(i.blockquote,{children:["\n",(0,t.jsx)(i.p,{children:"Use this page to test extensively if everything is working as expected before uploading,\nincluding metadata, game play and scores."}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:'When everything looks ready, make sure you are connected with a web3 wallet,\nand click "Upload Cartridge", it should cost a few USD cents to upload on Base Mainnet chain.\nOnce you upload, you will also burn some fees to make the transaction,\nand you won\'t be able to update the cartridge for at least a week,\nso be very sure everything is correct.'}),"\n",(0,t.jsxs)(i.p,{children:["After the transaction goes through, wait about 30 minutes and your cartridge should appear at\n",(0,t.jsx)(i.a,{href:"https://app.rives.io/locked-cartridges",children:"locked cartridges page"}),".\nThe name of the cartridge will not be present on the last,\nyou will only be able to identify by the timestamp and wallet address."]}),"\n",(0,t.jsx)(i.p,{children:"Once it's there, notify the RIVES team on Discord requesting their approval.\nBecause at the moment the RIVES team is moderating what cartridges are approved,but in the future we wish to make this process automatic.Notice the RIVES team may reject cartridges that are too big, malformed, not working,\nbuggy, or inappropriate."}),"\n",(0,t.jsxs)(i.p,{children:["Once the upload is complete and approved,\nit should appear in RIVES ",(0,t.jsx)(i.a,{href:"https://app.rives.io/cartridges",children:"cartridges page"}),".\nIt will also show in your wallet profile page, in cartridges you created."]})]})}function h(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8318:(e,i,a)=>{a.d(i,{A:()=>r});const r=a.p+"assets/images/upload_page-6ee4360cb123be127a453388a0778c68.png"},8453:(e,i,a)=>{a.d(i,{R:()=>s,x:()=>o});var r=a(6540);const t={},n=r.createContext(t);function s(e){const i=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(n.Provider,{value:i},e.children)}}}]);