"use strict";(self.webpackChunkrives_docs=self.webpackChunkrives_docs||[]).push([[255],{2519:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var t=i(4848),s=i(8453);const o={sidebar_position:1},a="Introduction",r={id:"riv/introduction",title:"Introduction",description:"What is RIV?",source:"@site/docs/riv/introduction.md",sourceDirName:"riv",slug:"/riv/introduction",permalink:"/docs/riv/introduction",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"RIV",permalink:"/docs/category/riv"},next:{title:"Getting started",permalink:"/docs/riv/getting-started"}},l={},c=[{value:"What is RIV?",id:"what-is-riv",level:2},{value:"Console Specs",id:"console-specs",level:2},{value:"Components",id:"components",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,t.jsx)(n.h2,{id:"what-is-riv",children:"What is RIV?"}),"\n",(0,t.jsx)(n.p,{children:"RIV is a low-level verifiable fantasy console for building small games that runs on a special RISC-V Linux machine."}),"\n",(0,t.jsxs)(n.p,{children:["RIV can run ",(0,t.jsx)(n.em,{children:"cartridges"}),", which are small self-contained compressed files\nthat can be built with any programming language that compiles to RISC-V."]}),"\n",(0,t.jsxs)(n.p,{children:["RIV is a verifiable fantasy console, and most likely the first of its kind.\nActions of game plays can be recorded into ",(0,t.jsx)(n.em,{children:"tapes"})," to later be deterministically replayed,\nallowing to be used by blockchain smart contracts to verify game ",(0,t.jsx)(n.em,{children:"outcomes"}),".\nThis opens the possibility of creating new interesting decentralized gaming applications,\nsuch as a tournament platform with no central authority.\n",(0,t.jsx)(n.em,{children:"Tapes"})," can also be used to store game plays in a very compressed file,\nto later be re-watched and processed."]}),"\n",(0,t.jsxs)(n.p,{children:["RIV is the core component for verifying games in RIVES.\nBut it's decoupled from it, so it can be used as a standalone game console emulator.\nRIV is a fantasy console while RIVES is its ",(0,t.jsx)(n.em,{children:"on-chain"})," fantasy console counterpart,\nyou can use RIV to play games and create games off-chain, and RIVES to play games on-chain."]}),"\n",(0,t.jsxs)(n.p,{children:["RIV has its official emulator called RIVEMU designed to be portable for any platform, currently it can run on WebAssembly, Linux, Windows and MacOS.\nRIVEMU is powerful enough to run retro style games with full graphics, audio and keyboard input in real-time directly.\nRIVEMU embeds the ",(0,t.jsx)(n.a,{href:"https://github.com/cartesi/machine-emulator",children:"Cartesi Machine emulator"}),",\na special kind of emulator capable of efficiently running a full RISC-V architecture while allowing its execution to be strongly deterministic and its computations to bisected,\nso every state transition can be logged to use for verification in blockchain smart contracts for fraud proofs.\nThis emulator is also the heart of ",(0,t.jsx)(n.a,{href:"https://cartesi.io",children:"Cartesi"})," Rollups, that is used by RIVES for its on-chain infrastructure."]}),"\n",(0,t.jsx)(n.h2,{id:"console-specs",children:"Console Specs"}),"\n",(0,t.jsx)(n.p,{children:"Fantasy consoles usually force developers to work within narrow limitations.\nThe idea is that by removing excess and focusing on the essential, it becomes easier to start and finish developing a game.\nThis is in contrast to large game engines like Unity, Unreal,\nwhich can be daunting and distracting.\nRIV imposes many limitations,\nalthough more relaxed than other fantasy consoles."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Display: 256x256 pixels by default, customizable, maximum of 1280x720"}),"\n",(0,t.jsx)(n.li,{children:"Frame rate: 60Hz by default, customizable, maximum of 60Hz"}),"\n",(0,t.jsx)(n.li,{children:"Colors: 32 by default, customizable, maximum of 256"}),"\n",(0,t.jsx)(n.li,{children:"Audio: 48kHz sample rate, 2 channels (stereo), maximum of 32 simultaneous sounds"}),"\n",(0,t.jsx)(n.li,{children:"Input: 16 digital button gamepad or 105 buttons keyboard, up to 4 gamepads for local co-op, no support for mouse or analog buttons"}),"\n",(0,t.jsx)(n.li,{children:"CPU: RISC-V 64-bit CPU, base clock of 128MHz, up to 512MHz+ depending the system the emulator is running on, games are recommended to push at maximum 128MHz so everyone can play smoothly"}),"\n",(0,t.jsx)(n.li,{children:"GPU: no accelerated graphics, CPU software rendering"}),"\n",(0,t.jsx)(n.li,{children:"Operating system: RIV OS, a custom Linux distribution based on Alpine Linux"}),"\n",(0,t.jsx)(n.li,{children:"Processing limit: 96 billion RISC-V instructions, enough for ~30min session of DOOM or ~120min session of Antcopter"}),"\n",(0,t.jsx)(n.li,{children:"Cartridge memory limit: 96MB"}),"\n",(0,t.jsx)(n.li,{children:"Cartridge size limit: RIV has no limit, RIVES limits to 512KB, cartridges are compressed"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These constrains are still being worked out,\nwe might change while we test the console."}),"\n",(0,t.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,t.jsx)(n.p,{children:"The console os divided in several components, which are:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"RIVEMU"}),": Emulator used for running and developing cartridges."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"libriv"}),': Library used for developing games, provides a public API to handling graphics, audio and inputs. It implements a driver that communicate with the console "hardware".']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"RIV OS"}),": Minimal operating system based on Alpine Linux, the environment where every cartridge runs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"RIV SDK"}),": Operating system with additional utilities for developing cartridges, contains programming language compilers, debuggers and other tools, you can also customize it."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var t=i(6540);const s={},o=t.createContext(s);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);