"use strict";(self.webpackChunkrives_docs=self.webpackChunkrives_docs||[]).push([[7558],{2047:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var i=t(4848),r=t(8453);const s={sidebar_position:2},a="Getting started",o={id:"riv/getting-started",title:"Getting started",description:"This tutorial will guide step by step on how to install RIVEMU,",source:"@site/docs/riv/getting-started.md",sourceDirName:"riv",slug:"/riv/getting-started",permalink:"/docs/riv/getting-started",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/riv/introduction"},next:{title:"Developing cartridges",permalink:"/docs/riv/developing-cartridges"}},c={},d=[{value:"Installing",id:"installing",level:2},{value:"Playing cartridges",id:"playing-cartridges",level:2},{value:"Recording and replaying tapes",id:"recording-and-replaying-tapes",level:2},{value:"Viewing tape outcards",id:"viewing-tape-outcards",level:2},{value:"Verifying tape outcards",id:"verifying-tape-outcards",level:2},{value:"Other options",id:"other-options",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"getting-started",children:"Getting started"})}),"\n",(0,i.jsx)(n.p,{children:"This tutorial will guide step by step on how to install RIVEMU,\nplay cartridges, record tapes, replay tapes and verify tapes."}),"\n",(0,i.jsx)(n.p,{children:"It's mandatory for those trying to grasp what RIV is,\nbefore actually developing games for it."}),"\n",(0,i.jsxs)(n.p,{children:["This tutorial will assume you are running commands in a POSIX compatible terminal emulator, such as the ones found natively on Linux and MacOS.\nIf you don't have this set up in your system yet,\nthen go set it up before continuing.\nFor Windows you could check out ",(0,i.jsx)(n.a,{href:"https://www.msys2.org/",children:"MSYS2"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"installing",children:"Installing"}),"\n",(0,i.jsxs)(n.p,{children:["RIVEMU is all you need to install in your system for both playing and developing cartridges.\nTo install RIVEMU you just need to download its binary for your system\nat ",(0,i.jsx)(n.a,{href:"https://github.com/rives-io/riv/releases/latest",children:"GitHub releases page"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"For example, if you are on a system with Linux x86_64, you can download with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"wget -O rivemu https://github.com/rives-io/riv/releases/latest/download/rivemu-linux-amd64\nchmod +x rivemu\n"})}),"\n",(0,i.jsxs)(n.p,{children:["After downloading, check if it's working properly with the ",(0,i.jsx)(n.code,{children:"-version"})," command:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"./rivemu -version\nrivemu 0.3.0\nlibriv 0.3.0\nplatform: linux\narchitecture: amd64\nbuild date: 2024-04-13 19:54:03 GMT\n"})}),"\n",(0,i.jsx)(n.p,{children:"If you see a similar output, it should be working."}),"\n",(0,i.jsxs)(n.p,{children:["To make ",(0,i.jsx)(n.code,{children:"rivemu"})," available in any shell in your system,\nI recommended installing it in your system environment ",(0,i.jsx)(n.code,{children:"PATH"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"mkdir -p $HOME/.riv\nmv rivemu $HOME/.riv/\necho 'export PATH=$HOME/.riv:$PATH' >> $HOME/.bashrc\nexport PATH=$HOME/.riv:$PATH\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This way you should be able to type ",(0,i.jsx)(n.code,{children:"rivemu"})," from any working directory in your system.\nThe rest of this tutorial will assume ",(0,i.jsx)(n.code,{children:"rivemu"})," is available in your ",(0,i.jsx)(n.code,{children:"PATH"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"playing-cartridges",children:"Playing cartridges"}),"\n",(0,i.jsxs)(n.p,{children:["To play a cartridge you just need to download its respective ",(0,i.jsx)(n.code,{children:".sqfs"})," file\nand call ",(0,i.jsx)(n.code,{children:"rivemu"})," using it as the first argument:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"wget -O antcopter.sqfs https://raw.githubusercontent.com/edubart/cartridges/main/antcopter.sqfs\nrivemu antcopter.sqfs\n"})}),"\n",(0,i.jsx)(n.p,{children:"After executing the above commands a window with the Antcopter game should pop up.\nYou should be able to play it using arrows and Z X keys."}),"\n",(0,i.jsx)("div",{align:"center",children:(0,i.jsx)("iframe",{src:"https://emulator.rives.io/#simple=true&cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/antcopter.sqfs",allowFullScreen:!0,className:"rivemu-frame"})}),"\n",(0,i.jsx)(n.p,{children:"You can test above the cartridge for this chapter."}),"\n",(0,i.jsx)(n.h2,{id:"recording-and-replaying-tapes",children:"Recording and replaying tapes"}),"\n",(0,i.jsxs)(n.p,{children:["With RIV you can record gameplays sessions, we call them ",(0,i.jsx)(n.em,{children:"tapes"}),",\nyou can record a tape with ",(0,i.jsx)(n.code,{children:"-record"})," option,\nand you can replay a tape with ",(0,i.jsx)(n.code,{children:"-replay"})," options."]}),"\n",(0,i.jsx)(n.p,{children:"Let's record a tape for Antcopter:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"rivemu -record=antcopter.rivtape antcopter.sqfs 1\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Did you notice the ",(0,i.jsx)(n.code,{children:"1"})," added argument?\nFor this specific cartridge this argument will change the game ",(0,i.jsx)(n.em,{children:"parameters"}),",\nit will set the number of lifes to 1, so go ahead and play until you die."]}),"\n",(0,i.jsxs)(n.p,{children:["After you die the file ",(0,i.jsx)(n.code,{children:"antcopter.rivtape"})," will be saved,\nand can re-watch you game play with:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"rivemu -replay=antcopter.rivtape antcopter.sqfs 1\n"})}),"\n",(0,i.jsx)(n.p,{children:"You will watch you die again.\nYou can even replay in 2x speed with:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"rivemu -replay=antcopter.rivtape -speed=2 antcopter.sqfs 1\n"})}),"\n",(0,i.jsx)(n.p,{children:"If you inspect the tape file, it is very small,\nit's much cheaper to store just this file rather than a gameplay video."}),"\n",(0,i.jsx)(n.h2,{id:"viewing-tape-outcards",children:"Viewing tape outcards"}),"\n",(0,i.jsxs)(n.p,{children:["Did you notice you had a score on the last screen when you died in Antcopter in last section?\nThis score is also the game outcome, we call it ",(0,i.jsx)(n.em,{children:"outcard"}),",\nyou can replay and print the ",(0,i.jsx)(n.em,{children:"outcard"})," from a ",(0,i.jsx)(n.em,{children:"tape"})," you recorded with:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"rivemu -replay=antcopter.rivtape -no-window -print-outcard -print-outhash antcopter.sqfs 1\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Notice the ",(0,i.jsx)(n.code,{children:"-no-window"})," option was added,\nbecause we just want to show the game final outcard,\nso there is no need to render every game frames at all,\nwith this option the game is fast forwarded until it ends."]}),"\n",(0,i.jsx)(n.p,{children:"When executing the above command, the output should have something similar to:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'[RIVEMU] Outcard:\nJSON{"score":23193,"level":2,"berries":4,"frames":407,"deaths":1,"finished":true}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["An ",(0,i.jsx)(n.em,{children:"outcard"})," in case of Antcopter is a JSON with a list of scores,\nbut really could be any kind of file, like an image, or a state for saving the game."]}),"\n",(0,i.jsxs)(n.p,{children:["Notice in this outcard, we can see the amount of deaths, frames and berries for this ",(0,i.jsx)(n.em,{children:"tape"}),".\nIn RIVES for instance this information can be used to create a applications that uses\nthis information in smart contracts."]}),"\n",(0,i.jsx)(n.h2,{id:"verifying-tape-outcards",children:"Verifying tape outcards"}),"\n",(0,i.jsxs)(n.p,{children:["Notice in the last example we also added the option ",(0,i.jsx)(n.code,{children:"-print-outhash"}),",\nthis option should have printed a SHA-256 hash of the ",(0,i.jsx)(n.em,{children:"outcard"})," like the following:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[RIVEMU] Outcard sha256sum:\nb30bbe797707c9d04c675ecbfbc862585b959b0d45ecb9aee9197c137eafffb7\n"})}),"\n",(0,i.jsx)(n.p,{children:"This hash can be used to verify of tape outcomes did match an expected outcome,"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sh",children:"rivemu -verify=antcopter.rivtape -verify-outhash=b30bbe797707c9d04c675ecbfbc862585b959b0d45ecb9aee9197c137eafffb7 -no-window antcopter.sqfs 1\n"})}),"\n",(0,i.jsx)(n.p,{children:"If the outcard matches you should get the following output:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"[RIVEMU] Outcard sha256sum verification SUCCEEDED!\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In case you use the same hash of the above text,\nof course it will not match with the tape you recorded locally,\nchange to the expected hash to see the ",(0,i.jsx)(n.code,{children:"SUCCEEDED!"})," message."]}),"\n",(0,i.jsxs)(n.p,{children:["Notice that in order to verify a tape\nyou needed to have the combination of the ",(0,i.jsx)(n.em,{children:"cartridge"}),", ",(0,i.jsx)(n.em,{children:"tape"}),", ",(0,i.jsx)(n.em,{children:"parameters"})," and ",(0,i.jsx)(n.em,{children:"outcard"})," hash.\nRIVES for instance store all this information in smart contracts in order to verify tape outcomes."]}),"\n",(0,i.jsx)(n.p,{children:"Tapes can also be very useful while developing games,\nto check if game behavior is not impacted while you modify the game.\nYou could create a test suite of tapes along with their respective outcard hashes,\nand then verify if they match while you do cosmetic changes in your game."}),"\n",(0,i.jsx)(n.h2,{id:"other-options",children:"Other options"}),"\n",(0,i.jsxs)(n.p,{children:["RIVEMU has many other options, mostly useful for developing cartridges,\nyou can check the ",(0,i.jsx)(n.code,{children:"-help"})," option to see its list.\nIf you are interested learning more about them,\ngo to the next chapter were we get into actually developing your first cartridge\nand learn about many options along the way."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);