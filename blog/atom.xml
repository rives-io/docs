<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://rives.io/blog</id>
    <title>RIVES Blog</title>
    <updated>2024-09-11T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://rives.io/blog"/>
    <subtitle>RIVES Blog</subtitle>
    <icon>https://rives.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Going deeper on the challenges for having Doom onchain]]></title>
        <id>https://rives.io/blog/doom-deep-dive</id>
        <link href="https://rives.io/blog/doom-deep-dive"/>
        <updated>2024-09-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Doom runs everywhere, from PCs to home appliances, so what's the big deal on bringing it onchain?]]></summary>
        <content type="html"><![CDATA[<center><p><img decoding="async" loading="lazy" alt="Doom deep dive header" src="https://rives.io/assets/images/doom_everywhere-5f93e2e10f853a48a43ea41fcec314cf.jpg" width="1280" height="720" class="img_ev3q"></p></center>
<h1>Intro</h1>
<p>Doom is a super iconic game. The legion of fans keep up a true cult around it and there are all sorts of groups involved with the game. One of my favorite groups is the one that ports Doom everywhere. Some crazy examples include home appliances like a <a href="https://www.reddit.com/r/itrunsdoom/comments/1budbid/doom_on_the_new_samsung_allinone_washer/" target="_blank" rel="noopener noreferrer">washing machine</a> or a <a href="https://www.reddit.com/r/itrunsdoom/comments/1b2lgxw/doom_runs_on_wifi_toothbrush_without_hardware_mods/" target="_blank" rel="noopener noreferrer">smart toothbrush</a></p>
<p>But there was still a barrier for Doom to break: the blockchain.</p>
<div align="center"><p><img decoding="async" loading="lazy" alt="Doom on a washing machine" src="https://rives.io/assets/images/doom_on_washing_machine-b69a009ecc38c519c7c15225e4820879.jpg" width="1024" height="1365" class="img_ev3q"></p></div>
<blockquote>
<p>No idea how to input commands in there</p>
</blockquote>
<h1>Blockchain computational capability limitations</h1>
<p>Blockchain is an amazing technology and has come a long way in a really small amount of time. From just a ledger and payment system on the initial Bitcoin release up to the current environment with hundreds of different projects pushing the barrier of what is possible. Taking a look at Ethereum, it's easy to understand why putting Doom onchain is such a daunting task.</p>
<p>Currently the Ethereum Blockchain has a maximum amount of gas per block of 30M, which is enough to compute at most 10M instructions (optimistically, considering the cheapest useful instructions cost 3 gas, like ADD or SUB). Considering the average time of 12s per block that gives us less than a million operations per second (or less than 1MHz) for the “World Computer” CPU, as Ethereum is known. And that is what the entire network with everyone in the world has available, so executing Doom directly on Ethereum is a no go.</p>
<h1>Bringing Doom onchain</h1>
<p>In the past a 1st approach of <a href="https://blockworks.co/news/play-doom-bitcoin" target="_blank" rel="noopener noreferrer">storing a Doom like game as data onchain</a> was performed and people could read it from the ledger and play the game. It's a nice step, but gives you no consensus over the result achieved (everyone just plays locally and no one else verifies anything) thus doesn't really give many advantages over just running a copy of the game you downloaded from a server on your machine (besides having downloaded it from a decentralized ledger).</p>
<p>We were way bolder: we wanted to have a playable Doom that can be verified onchain (though that is super complex as Doom requires a LOT of CPU power by the blockchain standards). This was all born last year when one of our devs accepted a bold challenge: executing Doom in a verifiable manner in real time. In order to do that he used the Cartesi Machine (a deterministic RISC-V virtual machine) and delivered on that.</p>
<div align="center"><p><img decoding="async" loading="lazy" alt="Eduardo&amp;#39;s tweet on bringing Doom to the Cartesi Machine" src="https://rives.io/assets/images/doom_tweet-3c60ec4c1eab92cef40babec30641d23.jpg" width="740" height="1280" class="img_ev3q"></p></div>
<blockquote>
<p>Eduardo’s triumphant tweet displaying Doom executing in real time inside the Cartesi Machine</p>
</blockquote>
<p>From there it was a matter of putting that onchain: turning the Doom execution inside a Cartesi Machine into a DApp using <a href="https://docs.cartesi.io/cartesi-rollups/1.5/core-concepts/optimistic-rollups/#cartesi-rollups" target="_blank" rel="noopener noreferrer">Cartesi Rollups</a> solution (which is an app chain framework that turns Cartesi Machine computations into Optimistic Rollups fully verifiable).</p>
<p>The final touch is making it easy for the user to execute (and also for developer to develop games). How do we achieve that? We execute the Cartesi Machine both in the validator nodes and in the user machine (as we had the sizeable effort of porting the Cartesi Machine to the browser by compiling it to WebAssembly) and that allows us to execute this complex piece of art in real time in a deterministic fashion - without the burden of adapting the code to make it deterministic, thanks Cartesi Machine. While the user plays the game, the movements are being recorded along with the simulation tick in which they were performed and after the match is done they can be submitted onchain so the validator can verify the match, resimulating the entire game and verifying the score and other achievements.</p>
<p>Nice, but was that all that was needed? No! Freedoom expects to draw on the screen using the native graphical interface as well as play audio using the native audio device, we also had to change it to use the <a href="https://github.com/rives-io/riv/blob/main/libriv/riv.h" target="_blank" rel="noopener noreferrer">RIV Api</a> to accomplish those tasks. Once that was done, Freedoom was ready to become a <a href="https://github.com/rives-io/cartridge-freedoom" target="_blank" rel="noopener noreferrer">RIV cartridge</a> and enter the world of Rives!</p>
<p>This is quite a breakthrough, let’s dive a bit on the details. A 30 min session of Freedoom takes around <a href="https://rives.io/docs/riv/introduction#console-specs" target="_blank" rel="noopener noreferrer">96B RISC-V CPU cycles</a>. Going back to the Ethereum network capacity of optimistically executing 10M instructions per 12s or around 50M instructions per minute, at that rate, to execute 96B instructions it would take 32 hours with monopoly over the entire network capacity - something that is not practical and would cost way more than anyone is willing to pay to verify a Freedoom match.</p>
<h1>Other approaches to bring Doom onchain</h1>
<p>Other projects have taken different approaches to achieve similar objectives.</p>
<p>Risc Zero has <a href="https://www.risczero.com/blog/when-the-doom-music-kicks-in" target="_blank" rel="noopener noreferrer">proven a 1m28s demo of Doom</a> using a different approach: they took a Doom implementation that is meant to be executed without an OS (ours is executing on top of an Alpine Linux inside the Cartesi Machine) and ported it to execute directly inside their RISC V VM. Then they have used their prover to generate a ZK proof of the gameplay. To do that on a timely fashion they used a cluster of 250 g4dn.xlarge instances on Amazon (which cost on demand $0.526 per hour). It took them about 33 mins with the 250 g4dn.xlarge instances to generate the proof of the 1min 28s gameplay (which is a fantastic technological feat, but not very practical). They also did another demo without the rendering, just the core game logic that drastically diminishes the number of CPU cycles of the computation (over 70 times) and were able to generate the proof in under 2 minutes.</p>
<p>Another recent approach was taken by the Cardano Hydra team that executed <a href="https://github.com/cardano-scaling/hydra-doom" target="_blank" rel="noopener noreferrer">Doom on a Hydra L2</a>, which is basically a state channel that goes back to the Cardano L1. It is an interesting approach but the lack of data availability of the player moves outside the state channel renders the verification of the game by other parties not feasible, plus the trust assumptions for a global leaderboard are not met.</p>
<h1>The Doom Olympics and the Rives "rules" feature</h1>
<p>Ok, so a after this long tour explaining the technical difficulties about bringing Doom onchain and various approaches that were tried with this objective in mind, here comes an invitation:  come celebrate Rives mainnet launch with our Doom Olympics starting September 12th 2024. A new contest starts everyday and lasts 48hrs. There are seven different modalities of Doom that require different styles of gameplay to thrive. The modalities are: Lightning Run, Knuckle Crusher, Infallible Aim, Secret Master, Treasure Seeker, The Completionist and Enemy Eradicator! Each modality forces the player to have a completely different playstile ranging from running superfast to the end of the level without caring for enemies or items up to taking every step and shot cautiously and being as precise as possible.</p>
<p>We are able to make these completely different ways to play Doom due to a very nice Rives feature: rules. In this feature, anyone can set up a rule for a game and to customize the experience, parameters can be provided for the game (like manipulating the starting level, available items, number of lives or any other thing the game developer provides) and also a formula to evaluate the score (considering the metrics provided by the developer as outputs, like time, number of lives at the end of the match, level reached, items used/collected, etc). These input parameters are part of what we call incard while the output metrics are part of what we call outcard. You can also setup a time period for a rule to be played (which is what we are doing for the 7 contests of the Doom Olympics).</p>
<h1>See you at the Doom Olympics!</h1>
<p>Well, this wraps up this article! Hope you enjoyed it and waiting to see you competing in our Doom Olympics (more details <a href="https://rives.io/blog/doom-olympics">here</a>) for the ultimate onchain gaming bragging rights! Also, don't forget to join our <a href="https://discord.gg/FQnQqKWVn8" target="_blank" rel="noopener noreferrer">discord community</a> to talk to others about that epic run or ask for tips and follow our <a href="https://x.com/rives_io" target="_blank" rel="noopener noreferrer">twitter</a> for updates around Rives and the Doom Olympics :)</p>]]></content>
        <author>
            <name>carlo</name>
            <uri>https://x.com/carlofragni</uri>
        </author>
        <category label="doom olympics" term="doom olympics"/>
        <category label="doom" term="doom"/>
        <category label="rives" term="rives"/>
        <category label="mainnet launch" term="mainnet launch"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Doom Olympics]]></title>
        <id>https://rives.io/blog/doom-olympics</id>
        <link href="https://rives.io/blog/doom-olympics"/>
        <updated>2024-09-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introducing the Rives Doom Olympics, the most intensive olympic games ever!]]></summary>
        <content type="html"><![CDATA[<center><p><img decoding="async" loading="lazy" alt="Doom Olympics header" src="https://rives.io/assets/images/doom_olympics_header-df5ef9b7ddebe797ce313d92fe2bf9cc.jpg" width="1280" height="720" class="img_ev3q"></p></center>
<h1>Intro</h1>
<p>The Olympics are one of the oldest traditions in the world and have always been used to bring people together, display power, bring honor and elevate the athletes with highest skill to the rank of heroes. We've been building Rives for a while using the amazing technology developed by Cartesi, so, what better way to celebrate our Base mainnet launch with our community than to hold olympic games?</p>
<p>As an onchain console, we are going to pay our respects to one of the most iconic games: Doom. The Doom engine was opensourced and can be found <a href="https://github.com/id-Software/DOOM" target="_blank" rel="noopener noreferrer">here</a>. Unfortunately, the assets don't really benefit from the same license, so we are going to use a community developed Doom called <a href="https://github.com/freedoom/freedoom" target="_blank" rel="noopener noreferrer">Freedoom</a> which is based on the original engine and community made assets (monsters, levels, weapons, etc).</p>
<h1>How is this possible?</h1>
<p>Wow, this is super cool, but isn't that game too heavy to execute in a verifiable manner onchain? If you try to execute the game directly onchain on Ethereum, yes! So what do we do? We execute it inside the Cartesi Machine, which is a deterministic RISC-V emulator, which runs both in the Rives (app-specific) rollup validators and in the user machine (as we had the sizeable effort of porting the Cartesi Machine to the browser by compiling it to WebAssembly) and that allows us to execute this complex piece of art in real time in a deterministic fashion. While the user plays the game, the movements are being recorded along with the simulation tick in which they were performed and after the match is done they can be submitted onchain so the validator can verify the match, resimulating the entire game and verifying the score and other achievements.</p>
<div align="center"><p><img decoding="async" loading="lazy" alt="Rives Flow" src="https://rives.io/assets/images/rives_flow-fae48146c0cdcca951bfcaf0bede72df.jpg" width="1280" height="720" class="img_ev3q"></p></div>
<blockquote>
<p>The flow that a gameplay goes through on Rives</p>
</blockquote>
<h1>Prizes</h1>
<p>Let's detail a bit the prizes that are available at the Doom Olympics:</p>
<ul>
<li>7000 usd for the winners of the contests (For each contest: 600 for the 1st place, 300 for the 2nd and 100 for the 3rd place)</li>
<li>3500 usd spread across the top 100 players on the Doom Olympics global leaderboard</li>
<li>4500 usd for achievements, quests and more</li>
</ul>
<p>To be eligible for the prize, you must follow RIVES on <a href="https://x.com/rives_io" target="_blank" rel="noopener noreferrer">Twitter</a> and/or be part of the <a href="https://discord.gg/FQnQqKWVn8" target="_blank" rel="noopener noreferrer">Discord community</a></p>
<p>Rewards will be paid out in CTSI.</p>
<h1>The games</h1>
<p>Great, what about the games? Contests will open every day for 7 days, starting September 12th 15hrs UTC, and be live for 48 hours. The 7 different modalities or "disciplines" of Doom require different styles of gameplay to thrive. The disciplines are:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="lightning-run---sep-12-14-1430-utc">Lightning Run - Sep 12-14 14:30 UTC<a href="https://rives.io/blog/doom-olympics#lightning-run---sep-12-14-1430-utc" class="hash-link" aria-label="Direct link to Lightning Run - Sep 12-14 14:30 UTC" title="Direct link to Lightning Run - Sep 12-14 14:30 UTC">​</a></h3>
<p>This is the very first and the easiest contest of the FreeDOOM olympics!
Take advantage of this contest to improve your skills for the upcoming ones as they will be increasingly challenging.</p>
<ul>
<li>Objective:
Beat the levels in the shortest time.
There's no need to kill enemies if you can dodge, time is your main enemy!
Only level completions increase the score.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="knuckle-crusher---sep-13-15-1430-utc">Knuckle Crusher - Sep 13-15 14:30 UTC<a href="https://rives.io/blog/doom-olympics#knuckle-crusher---sep-13-15-1430-utc" class="hash-link" aria-label="Direct link to Knuckle Crusher - Sep 13-15 14:30 UTC" title="Direct link to Knuckle Crusher - Sep 13-15 14:30 UTC">​</a></h3>
<p>It's time to show off how good you got since last day,
by killing enemies with your bare hands until death!
You will play on the same levels and on the same difficulty as the first in the Lightning Run. As you must already be familiar with the levels, it should be a piece of cake, right?!</p>
<ul>
<li>Objective:
Kill the highest number of enemies with your bare hands in the shortest time.
Every punch hit increases the score!
The use of other weapons will not affect the score.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="infallible-aim---sep-14-16-1430-utc">Infallible Aim - Sep 14-16 14:30 UTC<a href="https://rives.io/blog/doom-olympics#infallible-aim---sep-14-16-1430-utc" class="hash-link" aria-label="Direct link to Infallible Aim - Sep 14-16 14:30 UTC" title="Direct link to Infallible Aim - Sep 14-16 14:30 UTC">​</a></h3>
<p>It's time to show how good you are with small guns and advance to new levels.
Shoot your enemies with the pistol whenever you get the chance!</p>
<ul>
<li>Objective:
Kill the highest number of enemies using the pistol in the shortest time.
Every pistol hit increases the score, but every miss decreases it!
The use of other weapons will not affect the score.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="secret-master---sep-15-17-1430-utc">Secret Master - Sep 15-17 14:30 UTC<a href="https://rives.io/blog/doom-olympics#secret-master---sep-15-17-1430-utc" class="hash-link" aria-label="Direct link to Secret Master - Sep 15-17 14:30 UTC" title="Direct link to Secret Master - Sep 15-17 14:30 UTC">​</a></h3>
<p>Do you think your eyes can see everything?
Every level has secrets, have you ever found one?
Show that you can find the secrets as we progress into new levels!
This contest takes place in the half of the Doom Olympics and you probably got skilled,
so the difficulty was also raised!</p>
<ul>
<li>Objective:
Beat the levels while unlocking the highest amount of secrets in the shortest time.
Every secret discovered increases the score!</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="treasure-seeker---sep-16-18-1430-utc">Treasure Seeker - Sep 16-18 14:30 UTC<a href="https://rives.io/blog/doom-olympics#treasure-seeker---sep-16-18-1430-utc" class="hash-link" aria-label="Direct link to Treasure Seeker - Sep 16-18 14:30 UTC" title="Direct link to Treasure Seeker - Sep 16-18 14:30 UTC">​</a></h3>
<p>By now you should be good at collecting resources, right?
Show that you can collect all the items as we progress into new levels!</p>
<ul>
<li>Objective:
Beat the levels while collecting the highest amount of items in the shortest time.
Every item collected increases the score!
The gaming session is limited to 30 minutes.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-completionist---sep-17-19-1430-utc">The Completionist - Sep 17-19 14:30 UTC<a href="https://rives.io/blog/doom-olympics#the-completionist---sep-17-19-1430-utc" class="hash-link" aria-label="Direct link to The Completionist - Sep 17-19 14:30 UTC" title="Direct link to The Completionist - Sep 17-19 14:30 UTC">​</a></h3>
<p>By now you should find secrets, collect items and know how to kill most enemies.
So you got pretty good at clearing everything, right?!
Show off that you never leave anything behind as we progress into new levels!</p>
<ul>
<li>Objective:
Beat the levels while clearing them in the shortest time.
Unlock secrets, kill enemies, collect items and be quick to increase your score!</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="enemy-eradicator---sep-18-20-1430-utc">Enemy Eradicator - Sep 18-20 14:30 UTC<a href="https://rives.io/blog/doom-olympics#enemy-eradicator---sep-18-20-1430-utc" class="hash-link" aria-label="Direct link to Enemy Eradicator - Sep 18-20 14:30 UTC" title="Direct link to Enemy Eradicator - Sep 18-20 14:30 UTC">​</a></h3>
<p>Do you think by now you got pretty skilled?
I dare you to kill all the enemies and the boss in the last levels
with even more difficulty!</p>
<ul>
<li>Objective:
Beat the levels while wiping all enemies in the shortest time.
Every enemy killed increases your score!</li>
</ul>
<div align="center"><p><img decoding="async" loading="lazy" alt="Doom contests" src="https://rives.io/assets/images/freedoom_contests-78c4cd16fe255f43c22e21efcd4a79f7.jpg" width="1280" height="720" class="img_ev3q"></p></div>
<blockquote>
<p>The seven tournaments that will take place during the Doom Olympics</p>
</blockquote>
<h1>See you soon at the Doom Olympics!</h1>
<p>Well, this wraps up the overview of our grand event to launch Rives on Base mainnet! Hope you enjoyed the article and hope to see you competing on our Doom Olympics for the ultimate onchain gaming bragging rights! Also, don't forget to join our <a href="https://discord.gg/FQnQqKWVn8" target="_blank" rel="noopener noreferrer">discord community</a> to talk to others about that epic run or ask for tips and follow our <a href="https://x.com/rives_io" target="_blank" rel="noopener noreferrer">twitter</a> for updates around Rives and the Doom Olympics :)</p>]]></content>
        <author>
            <name>carlo</name>
            <uri>https://x.com/carlofragni</uri>
        </author>
        <category label="doom olympics" term="doom olympics"/>
        <category label="rives" term="rives"/>
        <category label="mainnet launch" term="mainnet launch"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jam #2 recap]]></title>
        <id>https://rives.io/blog/jam2recap</id>
        <link href="https://rives.io/blog/jam2recap"/>
        <updated>2024-08-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Recap of the RIVES JAM #2]]></summary>
        <content type="html"><![CDATA[<center><p><img decoding="async" loading="lazy" alt="JAM2 image" src="https://rives.io/assets/images/jam2-f159e8ae12a0602405251c06cc539387.png" width="409" height="325" class="img_ev3q"></p></center>
<p>This post marks the end of <a href="https://itch.io/jam/rives2" target="_blank" rel="noopener noreferrer">RIVES JAM #2</a>, this time with <a href="https://www.forgottenrunes.com/" target="_blank" rel="noopener noreferrer">Forgotten Runes</a>. We had over 36 participants join the jam, with 4 submissions. For this one, the theme was Magic, and participants had the opportunity to win 1 of 3 warrior NFTs offered by Forgotten Runes on top of the RIVES prize pool.</p>
<p>We had 2 amazing vampire survivor games, 1 flappy bird-inspired game, and one top-down shooter-type game. You can dive deeper into the different games, descriptions, and links below. Make sure to playtest them directly here in the post. Soon you’ll be able to collect and compete on some of these games, onchain in the <a href="https://app.rives.io/" target="_blank" rel="noopener noreferrer">rives app</a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="wizard-pest-control-services-inc-by-ednekebno">Wizard Pest Control Services Inc by <a href="https://x.com/ednekebno" target="_blank" rel="noopener noreferrer">Ednekebno</a><a href="https://rives.io/blog/jam2recap#wizard-pest-control-services-inc-by-ednekebno" class="hash-link" aria-label="Direct link to wizard-pest-control-services-inc-by-ednekebno" title="Direct link to wizard-pest-control-services-inc-by-ednekebno">​</a></h3>
<p>This is Ednekebnos' second JAM. And the second time he takes home the first spot - well deserved. This take on a vampire survivor for RIVES is very complete and a blast to play, impressive that this was built within a game jam. It has 11 spells and 33 possible upgrade choices! I love the twist on the Magic theme, blending it with pest control. On top of the Forgotten Runes assets, there is also some RIVES lore incorporated in the game. And the game has a trailer, wow!</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam2/pestcontrol.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="controls">Controls<a href="https://rives.io/blog/jam2recap#controls" class="hash-link" aria-label="Direct link to Controls" title="Direct link to Controls">​</a></h4>
<p>Use a game controller directions and A button or the arrow keys and z on your keyboard. Diagonal movement is possible (e.g. on the keyboard hold down up and left arrows to go up to the left)</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="description">Description:<a href="https://rives.io/blog/jam2recap#description" class="hash-link" aria-label="Direct link to Description:" title="Direct link to Description:">​</a></h4>
<p>Here at Wizard Pest Control Services Inc we take pest control seriously. You know the story: a wizard gets a familiar and thinks "Wouldn't it be cool to have another one". The familiars, well, get familiar and before you know it there are swarms of baby creatures. It's a story we hear all too often. These unbound creatures turn evil, leading to more unbound creatures and you suddenly realize: YOU HAVE A PROBLEM.</p>
<p>Despair not, for we at Wizard Pest Control Services Inc are experts in magical pest removal. Choose from one of our 6 pest control experts and we'll have your problem solved before you can say "why couldn't I have just sticked to having one". Our experts are on top of their continuing professional development and constantly upgrade their skills through magical gems that inexplicably spawn from dying creatures (and by the way, any gold coins we find our ours too - it's in our standard terms and conditions).</p>
<p>Don't delay. Call Wizard Pest Control Services Inc today. Wizard Pest Control Services Inc is an equal opportunities employer*</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="links">Links:<a href="https://rives.io/blog/jam2recap#links" class="hash-link" aria-label="Direct link to Links:" title="Direct link to Links:">​</a></h4>
<ul>
<li><a href="https://itch.io/jam/rives2/rate/2890280" target="_blank" rel="noopener noreferrer">Jam submission page</a></li>
<li><a href="https://ednekebno.itch.io/wizard-pest-control-inc" target="_blank" rel="noopener noreferrer">Itch game page</a></li>
<li><a href="https://www.youtube.com/watch?v=rlZ9-GekrD4" target="_blank" rel="noopener noreferrer">Game Trailer!!</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="forgotten-survivors-by-pickleberto">Forgotten Survivors by <a href="https://x.com/pickleberto" target="_blank" rel="noopener noreferrer">pickleberto</a><a href="https://rives.io/blog/jam2recap#forgotten-survivors-by-pickleberto" class="hash-link" aria-label="Direct link to forgotten-survivors-by-pickleberto" title="Direct link to forgotten-survivors-by-pickleberto">​</a></h3>
<p>This is also Pickleberto’s second RIVES JAM! Another vampire survivor-type game that was submitted in this jam! Great game as well, it’s smooth and I love the simplicity here. On top of using the main Forgotten Runes characters, Pickleberto also implemented some other assets such as the snake, the book, and other lore from the Forgotten Runes which is awesome. Also, check out the endless mode!</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam2/forgotten-survivors.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="controls-1">Controls:<a href="https://rives.io/blog/jam2recap#controls-1" class="hash-link" aria-label="Direct link to Controls:" title="Direct link to Controls:">​</a></h4>
<p>Directionals left/right up/down to move; Press X on starting screen for endless mode</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="description-1">Description:<a href="https://rives.io/blog/jam2recap#description-1" class="hash-link" aria-label="Direct link to Description:" title="Direct link to Description:">​</a></h4>
<p>Forgotten Survivors is heavily inspired by the famous <a href="https://poncle.itch.io/vampire-survivors" target="_blank" rel="noopener noreferrer">Vampire Survivors</a>. This is a smaller version made in C to run in <a href="https://rives.io/" target="_blank" rel="noopener noreferrer">RIVES</a> for the <a href="https://itch.io/jam/rives2" target="_blank" rel="noopener noreferrer">RIVES Jam #2</a>. Press any key to start the normal mode, where you have to survive for 6 waves to win. If you press X (or the gamepad button A2) on the first screen, you will start an endless mode where you can level up to level 100 and need to survive for as long as you can.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="links-1">Links:<a href="https://rives.io/blog/jam2recap#links-1" class="hash-link" aria-label="Direct link to Links:" title="Direct link to Links:">​</a></h4>
<ul>
<li><a href="https://itch.io/jam/rives2/rate/2899422" target="_blank" rel="noopener noreferrer">Jam submission page</a></li>
<li><a href="https://pickleberto.itch.io/forgotten-survivors" target="_blank" rel="noopener noreferrer">Itch game page</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="flappy-spider-by-nidaabaris">Flappy Spider by <a href="https://x.com/nidaaBaris" target="_blank" rel="noopener noreferrer">nidaabaris</a><a href="https://rives.io/blog/jam2recap#flappy-spider-by-nidaabaris" class="hash-link" aria-label="Direct link to flappy-spider-by-nidaabaris" title="Direct link to flappy-spider-by-nidaabaris">​</a></h3>
<p>It was a surprise to see this submission by Nida, and a great one! Nida is new to programming, so this was amazing to see. This submission is a flappy bird-inspired game with a spider instead of a bird, fitting the magic theme. It also has additional elements, such as barrels and potions, adding points and extending the game with additional lives. I can see tons of potential game modes/mods with a game like this!</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam2/flappy_spider.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="controls-2">Controls:<a href="https://rives.io/blog/jam2recap#controls-2" class="hash-link" aria-label="Direct link to Controls:" title="Direct link to Controls:">​</a></h4>
<p>Single button game: press z to jump</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="description-2">Description:<a href="https://rives.io/blog/jam2recap#description-2" class="hash-link" aria-label="Direct link to Description:" title="Direct link to Description:">​</a></h4>
<p>Flappy Spider is a thrilling twist on the classic Flappy Bird formula, designed specifically for the Rives ecosystem. In this retro-inspired game, you take control of a pixelated spider as it navigates through a series of challenging obstacles and collects valuable items.</p>
<p>Your mission? Achieve the highest score possible. The map is filled with barrels and health potions, each serving a unique purpose. Passing through obstacles will increase your score by 1 point, but the real challenge lies in collecting the barrels scattered throughout the environment—each barrel boosts your score by 5 points!</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="links-2">Links:<a href="https://rives.io/blog/jam2recap#links-2" class="hash-link" aria-label="Direct link to Links:" title="Direct link to Links:">​</a></h4>
<ul>
<li><a href="https://itch.io/jam/rives2/rate/2898901" target="_blank" rel="noopener noreferrer">Jam submission page</a></li>
<li><a href="https://nidaabaris.itch.io/flappyspider" target="_blank" rel="noopener noreferrer">Itch game page</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-lone-sorcerer-by-deluxe1337">The Lone Sorcerer by <a href="https://deluxe1337.itch.io/" target="_blank" rel="noopener noreferrer">DeLuxe1337</a><a href="https://rives.io/blog/jam2recap#the-lone-sorcerer-by-deluxe1337" class="hash-link" aria-label="Direct link to the-lone-sorcerer-by-deluxe1337" title="Direct link to the-lone-sorcerer-by-deluxe1337">​</a></h3>
<p>This is also DeLuxe’s second RIVES JAM and is the start of a 2D top-down shooter. It is still unfinished, but I can already see the potential. This game does not use sprites but has a storyline embedded in the game flow.</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam2/sorcerer-compiled.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="controls-3">Controls:<a href="https://rives.io/blog/jam2recap#controls-3" class="hash-link" aria-label="Direct link to Controls:" title="Direct link to Controls:">​</a></h4>
<p>E to shoot, arrows to move, W for next</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="description-3">Description:<a href="https://rives.io/blog/jam2recap#description-3" class="hash-link" aria-label="Direct link to Description:" title="Direct link to Description:">​</a></h4>
<p>The Lone Sorcerer. Play as a wizard after the downfall of civilization. Project is incomplete</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="links-3">Links:<a href="https://rives.io/blog/jam2recap#links-3" class="hash-link" aria-label="Direct link to Links:" title="Direct link to Links:">​</a></h4>
<ul>
<li><a href="https://itch.io/jam/rives2/rate/2896055" target="_blank" rel="noopener noreferrer">Jam submission page</a></li>
<li><a href="https://deluxe1337.itch.io/the-lone-sorcerer" target="_blank" rel="noopener noreferrer">Itch game page</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="after-jam">After-Jam<a href="https://rives.io/blog/jam2recap#after-jam" class="hash-link" aria-label="Direct link to After-Jam" title="Direct link to After-Jam">​</a></h2>
<p>Thanks to everyone who participated. I love how we are starting to see creators express themselves across different game genres. Past participants are stepping up their game further, yet have a recognizable style. Some high-quality games were built in this JAM! Also, great to see new people diving into the game creation craft. One of the goals of RIVES is to reduce the entry barriers for building games and make it fun for anyone to create. Having someone who hasn't coded much before, join, is a first form of validation that we're on the right track!</p>
<p>Very excited to play these games on app.rives.io (soon), compete on custom leaderboards, and generate tapes.</p>
<p>The final ranking for this jam, after voting is as follows:</p>
<ol>
<li>Wizard Pest Control Services Inc by <a href="https://x.com/ednekebno" target="_blank" rel="noopener noreferrer">Ednekebno</a></li>
<li>Forgotten Survivors by <a href="https://x.com/pickleberto" target="_blank" rel="noopener noreferrer">Pickleberto</a></li>
<li>Flappy Spider by <a href="https://x.com/nidaaBaris" target="_blank" rel="noopener noreferrer">Nidaabaris</a></li>
</ol>
<p>You can find the votes across criteria <a href="https://itch.io/jam/rives2/results" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>We hope that everyone who participated enjoyed this JAM! Thanks again to Forgotten Runes for providing the sprites and additional prizes!</p>]]></content>
        <author>
            <name>mux</name>
            <uri>https://x.com/Max_Hatesuer</uri>
        </author>
        <category label="jam" term="jam"/>
        <category label="rives" term="rives"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[RIVES technical overview]]></title>
        <id>https://rives.io/blog/rives-tech-overview</id>
        <link href="https://rives.io/blog/rives-tech-overview"/>
        <updated>2024-07-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[RIVES overview from an onchain perspective]]></summary>
        <content type="html"><![CDATA[<div align="center"><p><img decoding="async" loading="lazy" alt="Cookies powering pc" src="https://rives.io/assets/images/cookie-powered-pc-c72dc46e7a214182fbb1fcaeeebabbcd.png" width="256" height="256" class="img_ev3q"></p></div>
<blockquote>
<p>TL;DR; Rives is powered by delicious magical chocolate chip cookies.</p>
<p>— The Oracle</p>
</blockquote>
<p>Gaming is hard. Grinding to make that perfect run and someone else claims your glory. Servers that are shutdown from your favorite game because they are no longer profitable. Developer nerfs that character you put hundreds of hours grinding to level up. Does that ring a bell? To bring fun back to games (both for players and developers) we are building Rives. Rives is the first onchain fantasy console. Every single game in Rives is verifiable, validated in a Cartesi Rollup and secured by the blockchain consensus.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-web2-game-development-way">The web2 game development way<a href="https://rives.io/blog/rives-tech-overview#the-web2-game-development-way" class="hash-link" aria-label="Direct link to The web2 game development way" title="Direct link to The web2 game development way">​</a></h2>
<p>Ok, great! But how is that possible? In traditional web2 games the most common model is having a client-server architecture. Players have their interface rendering the graphics, receiving the player inputs that are relayed to the server and receiving updates from the server with the current game state. The server is the authority and dictates what is the truth of that game. You trust the server will not censor you nor cheat you in any way (like tempering with a random number that might change the outcome of a battle or the rarity of that loot you are getting at the end of a quest). Since everyone needs to trust the server there is not much that can be done. There are no guarantees the server will do the right thing, there is no transparency and if something fishy is going on there is really no way to dispute it and make things right.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="onchain-games">Onchain games<a href="https://rives.io/blog/rives-tech-overview#onchain-games" class="hash-link" aria-label="Direct link to Onchain games" title="Direct link to Onchain games">​</a></h2>
<p>Onchain games, on the other hand, are built differently. Verifiability is at the center of the narrative. The game logic is generally built on smart contracts in which the execution is performed by a very large number of nodes. Want to temper with a random number on a game running on Ethereum? Good luck colluding with hundreds of thousands of nodes to make it happen. You can independently run the game logic yourself and check that everything works as intended, no one tempering with the game state or lying about their epic achievements. The system is built with programmatic and economic mechanisms that makes it either impossible or just bad business to cheat on a game. That is great! But what is the catch? Well, onchain logic is slow and expensive. At the time of writing this article, Ethereum max gas per block is 30M gas and the cheapest useful instructions cost 3 gas (add/subtract/not and others - <a href="https://ethereum.org/en/developers/docs/evm/opcodes/" target="_blank" rel="noopener noreferrer">check the EVM OPCODES table</a>). A block is produced every <a href="https://ycharts.com/indicators/ethereum_average_block_time" target="_blank" rel="noopener noreferrer">12s on average</a>. That means that the best case scenario is, with monopoly of the network, to process around 50M instructions per minute. That is really not a lot. Now let's take a look at the costs. Checking a <a href="https://etherscan.io/gastracker#chart_gasprice" target="_blank" rel="noopener noreferrer">gas price tracker</a> the entire 30M gas of a block would cost around 900 USD (Ethereum price 3,305.06 USD and gas price 9 gwei), so that would be around 4500USD per minute. That is pretty expensive!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-zk-games">The ZK games<a href="https://rives.io/blog/rives-tech-overview#the-zk-games" class="hash-link" aria-label="Direct link to The ZK games" title="Direct link to The ZK games">​</a></h2>
<p>Modern onchain games want to break the latency, cost and processing limitations that they are faced with. The onchaing gaming community is currently bubbling with multiple different approaches with different trade-offs to tackle these issues. Some games are taking advantage of Zero-Knowledge (ZK) to run logic outside the blockchain scope. The logic executed outside has a ZK circuit that generates a proof of the correct execution of that code. The generated proof can later be verified so that the outcome of that computation can be applied and known to be correct. For a crash course on Zero Knowledge Proofs (ZKPs) you might want to <a href="https://medium.com/coinmonks/zero-knowledge-proofs-um-what-a092f0ee9f28" target="_blank" rel="noopener noreferrer">check this article</a>. ZKPs have a number of nice things, like allowing you to perform larger computations, still secured, outside of the blockchain and also privacy properties since you can make verifiable assertions over data you don't reveal, but they also have some drawbacks. Computing the proof of a computation grows exponentially with the size of the computation you want to prove, which imposes a steep overhead for the actual computation, limiting the feasibility of performing very large computations both from a financial and from hardware point of view. Most ZKP solution providers offer incentivized or altruistic services with clusters of supercomputers to make it practical to generate ZKPs of computations in a short time. Though that is nice, it also harms decentralization as it's not possible for a random person with consumer hardware to be a validator themselves.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-or-games">The OR games<a href="https://rives.io/blog/rives-tech-overview#the-or-games" class="hash-link" aria-label="Direct link to The OR games" title="Direct link to The OR games">​</a></h2>
<p>Others rely on solutions that are known as Optimistic Rollups (ORs). In ORs, the validators of a computation perform it outside of the blockchain and periodically make a claim on the base blockchain about the state of that computation, generally a hash of the computation state or the VM that is executing it. Other validators check that claim and if they find it to be incorrect, engage in a dispute with a different protocol depending on the OR solution. ORs also have a number of great properties and drawbacks. A good property of ORs is that they add very little overhead on the computation they secure: validators execute the computation once if they agree with the claim and at most less than twice in case of a dispute for most dispute protocols. The main disadvantage of ORs is the delay of finality: you need to wait after a claim is made so other validators have time to check it and dispute it in case it's incorrect. If you wait a small period to consider the claim undisputed you get faster finality but weaker security and if you wait a large amount of time you gain on security but delay finality.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-sharded-approach">The sharded approach<a href="https://rives.io/blog/rives-tech-overview#the-sharded-approach" class="hash-link" aria-label="Direct link to The sharded approach" title="Direct link to The sharded approach">​</a></h2>
<p>Some onchain game solutions are taking another approach that trades security for speed: they basically make an application or even session specific blockchain with a very small set of validators, enabling fast consensus and a high block production frequency (one per second or even more). That enables a lot of interesting games, even real time ones but at the expense of security - a rather small number of nodes can settle on an incorrect state as colluding with small numbers becomes very practical.</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam1/realninjachallenge.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<blockquote>
<p>Ok, care for a break? Here is a nice Rives minigame. Just press the white play button. Controls: Press Z to begin. Use the arrow keys to slash the fruits appearing on screen</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="rives-approach">Rives approach<a href="https://rives.io/blog/rives-tech-overview#rives-approach" class="hash-link" aria-label="Direct link to Rives approach" title="Direct link to Rives approach">​</a></h2>
<p>In Rives we value a very high standard for decentralization and security. We want anyone to be able to verify that a match outcome matches the claim and we want that to happen even if the honest player is surrounded by opponents colluding. The way we handle this is quite different from other approaches. At the base of our technology we use Cartesi Rollups: Cartesi Rollups are an OR solution that creates a rollup per application and with an execution environment called the Cartesi Machine. The Cartesi Machine is a deterministic RISC-V Linux-enabled emulator capable of executing traditional (web2) software stacks and enabling computations multiple orders of magnitude larger than what the base layer allows, with reasonable costs. Remember the computation capacity and costs for Ethereum presented earlier in this article? Just booting a lean Ubuntu distro with no graphical interface takes under a second on a Cartesi Machine in a regular laptop, and that accounts for over 3B RISC-V instructions. That alone would take the processing power of over an hour of the Ethereum network and cost over 270k USD. The tech is pretty amazing and if you want to read more about it you can do so on <a href="https://cartesi.io/" target="_blank" rel="noopener noreferrer">their site</a>.</p>
<p>Leveraging the power of the Cartesi technology we did something pretty interesting: we ported the Cartesi Machine to webassembly. Because of that, we can run Cartesi computations in the browser, directly on the client with no need for any special setups on the user machine (and yes, we have a full Linux distro running in there). Why did we do that? We want both players and developers to have a good experience with Rives. If we had games in which the client would basically render the interface and relay the player inputs to the blockchain, retrieving the updated game state for it, we would have high latency and that would severely limit the kind of games that could be developed (should be delay tolerant games, like turn based games). By having games running directly on the user browser we can have highly interactive games and latency is not an issue. Ok, but you could develop games directly on the browser, why the Cartesi Machine? Great question! The answer is pretty simple: when you have a decentralized game, you need the game logic to be deterministic in order to have others verifying it and reach consensus and it's pretty difficult to write deterministic software as there are so many sources of entropy: unspecified hardware behavior (like for floating point operations), wall clocks, different versions of runtime environment components, etc. Using a Cartesi Machine on the browser instantly makes any game running inside it deterministic! The game developer can focus on building their game without having to worry about making their code deterministic.</p>
<p>The basic flow in Rives today is:
The user enters <a href="https://rives.io/" target="_blank" rel="noopener noreferrer">our site</a> and selects a game. When they do that, they download to their computer our fantasy console (RIV) and the cartridge containing the game they want to play (both downloaded from the Rives Cartesi Rollup node and verifiable on chain).
The user then executes the game locally and has a smooth experience - plays the game in real time, hopefully has some fun :) - and while that is happening, RIV logs all the player actions and the tick in the game simulation in which they happened.
After they are done, this log is submitted onchain to the Rives Cartesi Rollup in a very efficient compact format. When that happens, a Rives validator will download the gameplay and reproduce the entire game simulation, validating the score, achievements and any other relevant outcome of that gaming session. Periodically Rives validators submit a claim on chain about the state of the Rives application. The current model is authority based but we´ll migrate to a decentralized model in which if a wrong claim is submitted a single honest validator is enough to enforce the right state (security guarantee inherited from the Cartesi Rollups, checkout <a href="https://cdn.sanity.io/files/zg5gx8g4/production/80a9e273750ef765a011a0ccc822b49f797fd7fd.pdf" target="_blank" rel="noopener noreferrer">the whitepaper</a> and the <a href="https://arxiv.org/abs/2212.12439" target="_blank" rel="noopener noreferrer">scientific paper</a> for the future version that converges faster in case of multiple disputes).</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-riv-api">The RIV API<a href="https://rives.io/blog/rives-tech-overview#the-riv-api" class="hash-link" aria-label="Direct link to The RIV API" title="Direct link to The RIV API">​</a></h2>
<p>To make it easy for developers to create their games without a steep learning curve, RIV has a powerful and simple API. The API is available in C but you can easily code in your preferred language with a simple wrapper for it. There are multiple examples in different languages available <a href="https://github.com/rives-io/riv/tree/main/demos" target="_blank" rel="noopener noreferrer">here</a>, and we have a comprehensive documentation for you to get started available <a href="https://docs.rives.io/" target="_blank" rel="noopener noreferrer">here</a>. Recently we had <a href="https://docs.rives.io/blog/jam1recap" target="_blank" rel="noopener noreferrer">our first game jam</a> and most developers were able to get started on Rives, read the documentation and develop their own game within one or two days. Our focus with Rives is making retro style games a joy, fast and easy to develop and publish. Currently the focus is on single-player or local co-op games, but we are working on different approaches to enable co-op games over network and later adversarial games (which are particularly challenging to protect from bad behavior on a decentralized setup - but that is a topic to explore in a future article :) ). RIV currently runs a custom Linux distro called RIV OS based on Alpine Linux and gives a lot of flexibility and nice tooling to make developing a Rives game an enjoyable experience.</p>
<div align="center"><div class="rivemu-compact-frame pixelated"><p><img decoding="async" loading="lazy" alt="Space cookies invasion" src="https://rives.io/assets/images/space_cookies_invasion-1b5fed4a69b26213c05007dc0eb01326.png" width="256" height="256" class="img_ev3q"></p></div></div>
<blockquote>
<p>A space cookie invaders might be the next game you want to make</p>
</blockquote>
<p>Ok, that was a pretty long article, so thank you for taking the time to read it and making it this far. If you were interested you are most likely a perfect person to join our community. Our Discord is super friendly and all kinds and levels of questions are encouraged, so <a href="https://discord.gg/YwAw9BxtVn" target="_blank" rel="noopener noreferrer">here is your invite to join</a>. Hope to see your next game soon on Rives!</p>]]></content>
        <author>
            <name>carlo</name>
            <uri>https://x.com/carlofragni</uri>
        </author>
        <category label="cartesi" term="cartesi"/>
        <category label="rives" term="rives"/>
        <category label="technology" term="technology"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Jam #1 recap]]></title>
        <id>https://rives.io/blog/jam1recap</id>
        <link href="https://rives.io/blog/jam1recap"/>
        <updated>2024-06-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Recap of the first RIVES game jam]]></summary>
        <content type="html"><![CDATA[<center><p><img decoding="async" loading="lazy" alt="Cookies powering pc" src="https://rives.io/assets/images/jam1-8c8a0841dec2f2f42532c06ed99f9f6c.png" width="400" height="300" class="img_ev3q"></p></center>
<p>Jam #1 was jam-packed with cool games. The Jam was also hosted on <a href="https://itch.io/jam/rives1" target="_blank" rel="noopener noreferrer">Itch.io</a> and is the first in many RIVES jams to come!!</p>
<p>We had over 40 participants and 9 submissions for this first edition. The jam focused on retro games with metrics to establish a score. A metric system (that can be used to establish a score) was a requirement for this jam. RIVES can natively add players to leaderboards based on their scores, making this an interesting criteria for the jam.</p>
<p>Check out the great games developed during the jam below. You can test them directly here, or compete onchain in the RIVES app.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="peeyow-by-ednekebno">Peeyow by <a href="https://x.com/ednekebno" target="_blank" rel="noopener noreferrer">Ednekebno</a><a href="https://rives.io/blog/jam1recap#peeyow-by-ednekebno" class="hash-link" aria-label="Direct link to peeyow-by-ednekebno" title="Direct link to peeyow-by-ednekebno">​</a></h3>
<p>The plot of every good sci-fi movie but now you can live and breathe it in a retro game! Your planet is under attack, so you fight some colorful alien spaceships. It's a side-scrolling shooter and the enemies have unique movement/shooting patterns. Read through the full description to get even more pumped before you give it a try. Can’t mess with the diner…</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam1/peeyow.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<blockquote>
<p>Controls: Arrow keys: move, D: fire</p>
</blockquote>
<ul>
<li><a href="https://ednekebno.itch.io/peeyow" target="_blank" rel="noopener noreferrer">Itch page</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="blockie-by-ednekebno">Blockie by <a href="https://x.com/ednekebno" target="_blank" rel="noopener noreferrer">Ednekebno</a><a href="https://rives.io/blog/jam1recap#blockie-by-ednekebno" class="hash-link" aria-label="Direct link to blockie-by-ednekebno" title="Direct link to blockie-by-ednekebno">​</a></h3>
<p>Ednekebno was on a roll for this first jam, as he submitted two games! This is the firs game he submitted, and it helped him get used to the system. It's a color-matching puzzle game. It looks like tetris on the surface but has its own unique set of rules. Beyond creating a fun game, this project is also technically interesting. The cartridge has a built-in MIDI player, which can play .mid files.</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam1/blockie.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<blockquote>
<p>Controls: Up to rotate blocks, Left and Right to move</p>
</blockquote>
<ul>
<li><a href="https://ednekebno.itch.io/blockie" target="_blank" rel="noopener noreferrer">Itch page</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="real-ninja-challenge-by-aleistercodely">Real ninja challenge by <a href="https://x.com/AleisterCodely" target="_blank" rel="noopener noreferrer">AleisterCodely</a><a href="https://rives.io/blog/jam1recap#real-ninja-challenge-by-aleistercodely" class="hash-link" aria-label="Direct link to real-ninja-challenge-by-aleistercodely" title="Direct link to real-ninja-challenge-by-aleistercodely">​</a></h3>
<p>I love slashing fruits almost as much as I love eating them. Fruit Ninja was one of my first iPhone experiences back in the day. Not the typical console nostalgia, but it brought back some memories of experiencing the magic of touch for the first time. Also has some guitar hero vibes but with fruits, very cool.</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam1/realninjachallenge.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<blockquote>
<p>Controls: A to begin, Arrows: slash fruits appearing on screen</p>
</blockquote>
<ul>
<li><a href="https://aleistercodely.itch.io/real-ninja-challenge" target="_blank" rel="noopener noreferrer">Itch page</a></li>
<li><a href="https://github.com/AleisterCodely/rivemu-real-ninja-challenge" target="_blank" rel="noopener noreferrer">Github</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="simple-city-builder-by-deluxe1337">Simple City Builder by <a href="https://deluxe1337.itch.io/" target="_blank" rel="noopener noreferrer">DeLuxe1337</a><a href="https://rives.io/blog/jam1recap#simple-city-builder-by-deluxe1337" class="hash-link" aria-label="Direct link to simple-city-builder-by-deluxe1337" title="Direct link to simple-city-builder-by-deluxe1337">​</a></h3>
<p>This game has a very different theme compared to the other games in this jam, this one is more strategic, you need to build a sustainable city and economy. Beyond being a score-based game, this could be an interesting fit for tapes. Build out a beautiful city, and interesting road systems and generate a unique tape of your setup.</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam1/simple-city-builder.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<blockquote>
<p>Controls: Q: open menu, arrows: move and pick location, F/W: build</p>
</blockquote>
<ul>
<li><a href="https://deluxe1337.itch.io/simple-city-builder" target="_blank" rel="noopener noreferrer">Itch page</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="river-rives-by-pickleberto">River Rives by <a href="https://x.com/pickleberto" target="_blank" rel="noopener noreferrer">pickleberto</a><a href="https://rives.io/blog/jam1recap#river-rives-by-pickleberto" class="hash-link" aria-label="Direct link to river-rives-by-pickleberto" title="Direct link to river-rives-by-pickleberto">​</a></h3>
<p>I was not born yet when the <a href="https://pt.wikipedia.org/wiki/Atari_2600" target="_blank" rel="noopener noreferrer">Atari 2600</a> came out, so this was my first time getting the <a href="https://en.wikipedia.org/wiki/River_Raid" target="_blank" rel="noopener noreferrer">River Raid</a> feeling. And I now understand why this was a classic game. Simple yet addictive!</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam1/river-rives.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<blockquote>
<p>Controls: Left and right: move horizontally; Up: speed up; Down: slow down; Z key or gamepad button A1: fire</p>
</blockquote>
<ul>
<li><a href="https://pickleberto.itch.io/river-rives" target="_blank" rel="noopener noreferrer">Itch page</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="breakout-for-rives-by-dtuler">Breakout for Rives by <a href="https://x.com/dtuler" target="_blank" rel="noopener noreferrer">dtuler</a><a href="https://rives.io/blog/jam1recap#breakout-for-rives-by-dtuler" class="hash-link" aria-label="Direct link to breakout-for-rives-by-dtuler" title="Direct link to breakout-for-rives-by-dtuler">​</a></h3>
<p>Breakout is a classic arcade video game developed and published by Atari and designed by Steve Wozniak. Danilo shipped this game in record time, the jam had just started. I remember playing this on the iPod Nano back in the early 2000s. I could see mods/custom rules emerge around a base game like Breakout.</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam1/breakout.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<blockquote>
<p>Controls: Arrows to move, Z to kickoff ball</p>
</blockquote>
<ul>
<li><a href="https://dtuler.itch.io/breakout-rives" target="_blank" rel="noopener noreferrer">Itch page</a></li>
<li><a href="https://github.com/tuler/breakout-rives" target="_blank" rel="noopener noreferrer">Github</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dave-raid-by-fabio-oshiro">Dave Raid by <a href="https://x.com/fabiooshiro" target="_blank" rel="noopener noreferrer">Fabio Oshiro</a><a href="https://rives.io/blog/jam1recap#dave-raid-by-fabio-oshiro" class="hash-link" aria-label="Direct link to dave-raid-by-fabio-oshiro" title="Direct link to dave-raid-by-fabio-oshiro">​</a></h3>
<p>Fabio built a very cool combo game. Shoot down the red enemies with your fighter plane, and then answer trivia questions to move to the next stage. Love the questions and lore which center around cartesi, the tech used to power rives. Make sure to read the description on itch. Fun concept!</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam1/dave-raid.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<blockquote>
<p>Controls: Arrows: move, S: fire</p>
</blockquote>
<ul>
<li><a href="https://fabiooshiro.itch.io/dave-raid" target="_blank" rel="noopener noreferrer">Itch page</a></li>
<li><a href="https://github.com/fabiooshiro/dave-raid" target="_blank" rel="noopener noreferrer">Github</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="bladebomber-by-edubart">Bladebomber by <a href="https://github.com/edubart" target="_blank" rel="noopener noreferrer">Edubart</a><a href="https://rives.io/blog/jam1recap#bladebomber-by-edubart" class="hash-link" aria-label="Direct link to bladebomber-by-edubart" title="Direct link to bladebomber-by-edubart">​</a></h3>
<p>Eduardo is part of the core RIVES team, focused on building RIV itself (so the game was disqualified from prizes). Bladebomber is written in pure C. Eduardo built it to demonstrate the RIV console C API. Furthermore it can serve as an example or template for future dungeon-crawler-type games on RIVES. A player could also easily build custom maps to extend the game in the future. This is a beautiful and fun game to play, and I love how Eduardo got to build this with his girlfriend who focused on designing the levels.</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam1/bladebomber.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<blockquote>
<p>Controls: UP/DOWN/LEFT/RIGHT: Walk, Z: Dash, X : Use blade, C: Use bomb</p>
</blockquote>
<ul>
<li><a href="https://edubart.itch.io/bladebomber" target="_blank" rel="noopener noreferrer">Itch page</a></li>
<li><a href="https://github.com/edubart/bladebomber" target="_blank" rel="noopener noreferrer">Github</a></li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="life-is-hard-by-lyno">Life is hard by <a href="https://github.com/lynoferraz" target="_blank" rel="noopener noreferrer">Lyno</a><a href="https://rives.io/blog/jam1recap#life-is-hard-by-lyno" class="hash-link" aria-label="Direct link to life-is-hard-by-lyno" title="Direct link to life-is-hard-by-lyno">​</a></h3>
<p>This is not just any game, it's "<a href="https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life" target="_blank" rel="noopener noreferrer">Game of life</a>" running on RIVES! Lyno is also a core RIVES team member and wanted to build a unique game that uniquely fits tapes. The lifeforms you create can take on many shapes, making every tape a unique creation/life that can be shared, collected, and enjoyed. To play, place the desired cells and let the simulation run. Lyno also added an interesting metric system which you can read about on the itch page.</p>
<div align="center"><iframe src="https://emulator.rives.io/#simple=true&amp;cartridge=https://raw.githubusercontent.com/edubart/cartridges/main/jam1/life.sqfs" allowfullscreen="" class="rivemu-frame"></iframe></div>
<blockquote>
<p>Controls: Arrows: move the cursor and keep pressed to move faster, Z/A1 to set/unset cell,  X/A2: to start the simulation</p>
</blockquote>
<ul>
<li><a href="https://fergo6.itch.io/life-is-hard" target="_blank" rel="noopener noreferrer">Itch page</a></li>
<li><a href="https://github.com/edubart/bladebomber" target="_blank" rel="noopener noreferrer">Github</a></li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="after-jam">After-Jam<a href="https://rives.io/blog/jam1recap#after-jam" class="hash-link" aria-label="Direct link to After-Jam" title="Direct link to After-Jam">​</a></h2>
<p>Thanks to everyone who participated. Every one of these games is amazing in their unique way. We were blown away by the great builders and games that were created. There was also a vote for prizes, where submitters and organizers could vote on itch. The final winners were:</p>
<p>1: Peeyow
2: Blockie
3: Real Ninja challenge.</p>
<p>We hope that everyone who participated enjoyed building on RIVES. One of our key objectives is to bring back the joy of creating (games). We look forward to seeing you continue to build out your games and/or start a new one. Keep an eye out for Jam #2 coming soon!</p>
<p>You can also view the post-jam community call video below, where we play the games and discuss feedback and impressions from the participants and players.</p>
<div align="center"><iframe id="ytplayer" type="text/html" width="640" height="360" src="https://www.youtube.com/embed/EJotbYRbmgk" frameborder="0"></iframe></div>]]></content>
        <author>
            <name>mux</name>
            <uri>https://x.com/Max_Hatesuer</uri>
        </author>
        <category label="jam" term="jam"/>
        <category label="rives" term="rives"/>
    </entry>
</feed>